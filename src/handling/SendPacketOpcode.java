package handling;

import constants.ServerConstants;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Properties;

public enum SendPacketOpcode implements WritableIntValueHolder {

    LOGIN_STATUS(0x00),
    CHAT_SERVER_STATUS(0x01),
    SERVERLIST(0x01),
    ENABLE_RECOMMENDED(0x03),
    CHARLIST(0x06),
    SERVER_IP(0x07),
    AUTO_LOGIN_STATUS(0x08),
    CHAR_NAME_RESPONSE(0x0A),
    ADD_NEW_CHAR_ENTRY(0x0B),
    CHAT_SERVER_PING(0x0D),
    DELETE_CHAR_RESPONSE(0x7FFE),
    CHANGE_CHANNEL(0x11),
    PING(0x12),
    CHAT_SERVER_RESULT(0x0F),
    CLIENT_AUTH(0x16),
    CS_USE(0x0C),
    EVENT_CHECK(0x0D),
    GUILD_CHAT(0x12),
    BUDDY_CHAT(0x13),
    PART_TIME(0x1D),
    LICENSE_RESULT(0x23),
    CHOOSE_GENDER(0x25),
    GENDER_SET(0x26),
    UNK0007(0x27),
    UNK0008(0x28),
    SHOW_CHAR_CARDS(0x29),
    SHOW_ACC_CASH(0x2A),
    SHOW_CHARSOLE(0x2B),
    WZ_CHECK(0x2D),
    SERVERSTATUS(0x34),
    CHANNEL_SELECTED(0x7FFE),
    RSA_KEY(0x2E),
    LOGIN_AUTH(0x35),
    CREAT_CHAR_AUTH(0x38),
    CREATING_CONNECTION(0x39),
    SEND_RECOMMENDED(0x7FFE),
    SECONDPW_ERROR(0x7FFE),
    MODIFY_INVENTORY_ITEM(0x49),
    UPDATE_INVENTORY_SLOT(0x4A),
    UPDATE_STATS(0x4B),
    GIVE_BUFF(0x4C),
    CANCEL_BUFF(0x4D),
    TEMP_STATS(0x4E),
    TEMP_STATS_RESET(0x4F),
    UPDATE_SKILLS(0x50),
    UPDATE_SKILL_TICK(0x51),
    SKILL_MEMORY(0x57),
    FLAME_MARK(0x7FFE),
    FAME_RESPONSE(0x5A),
    SHOW_STATUS_INFO(0x5B),
    SHOW_NOTES(0x5C),
    TROCK_LOCATIONS(0x5D),
    LIE_DETECTOR(0x5E),
    REPORT_RESPONSE(0x62),
    ENABLE_REPORT(0x63),
    UPDATE_MOUNT(0x65),
    SHOW_QUEST_COMPLETION(0x66),
    SEND_TITLE_BOX(0x67),
    USE_SKILL_BOOK(0x68),
    SP_RESET(0x69),
    AP_RESET(0x6A),
    DISTRIBUTE_ITEM(0x7FFE),
    EXPAND_CHARACTER_SLOTS(0x7FFE),
    FINISH_SORT(0x6F),
    FINISH_GATHER(0x70),
    REPORT_RESULT(0x7FFE),
    TRADE_LIMIT(0x7FFE),
    UPDATE_GENDER(0x7FFE),
    CHAR_INFO(0x73),
    PARTY_OPERATION(0x74),
    MEMBER_SEARCH(0x75),
    PARTY_SEARCH(0x76),
    EXPEDITION_OPERATION(0x7C),
    BUDDYLIST(0x7D),
    GUILD_OPERATION(0x81),
    ALLIANCE_OPERATION(0x82),
    SPAWN_PORTAL(0x83),
    MECH_PORTAL(0x85),
    SERVERMESSAGE(0x84),
    PIGMI_REWARD(0x7FFE),
    OWL_OF_MINERVA(0x88),
    YELLOW_CHAT(0x89),
    ENGAGE_REQUEST(0x8C),
    ENGAGE_RESULT(0x8D),
    PET_PICKUP_MSG(0x91),
    PET_AUTO_EAT_MSG(0x92),
    SYNTHESIZING_MSG(0x93),
    SHOP_DISCOUNT(0x96),
    NPC_HIDE(0x9B),
    FM_HIDE_MINIMAP(0x9F),
    ENERGY(0xA4),
    GHOST_POINT(0xA5),
    GHOST_STATUS(0xA6),
    FAIRY_PEND_MSG(0xA7),
    SEND_PEDIGREE(0xA8),
    OPEN_FAMILY(0xA9),
    FAMILY_MESSAGE(0xAA),
    FAMILY_INVITE(0xAB),
    FAMILY_JUNIOR(0xAC),
    SENIOR_MESSAGE(0xAD),
    FAMILY(0xAE),
    REP_INCREASE(0xAF),
    FAMILY_LOGGEDIN(0xB0),
    FAMILY_BUFF(0xB1),
    FAMILY_USE_REQUEST(0xB2),
    LEVEL_UPDATE(0xB3),
    MARRIAGE_UPDATE(0xB4),
    JOB_UPDATE(0xB5),
    PENDANT_SLOT(0xB6),
    FOLLOW_REQUEST(0xB7),
    TOP_MSG(0xB9),
    MID_MSG(0xBB),
    CLEAR_MID_MSG(0xBC),
    MAP_EFFECT_MSG(0xBD),
    SPECIAL_TOP_MSG(0xBF),
    MAPLE_ADMIN(0xC0),
    MAPLE_ADMIN_ERROR(0xC1),
    UPDATE_JAGUAR(0xC2),
    UPDATA_WP(0xC4),
    ULTIMATE_EXPLORER(0xC6),
    PAM_SONG(0xC7),
    PROFESSION_INFO(0xC8),
    UPDATE_IMP_TIME(0xC9),
    ITEM_POT(0xCA),
    GIVE_CHARACTER_SKILL(0xCE),
    MULUNG_MESSAGE(0xD2),
    MULUNG_DOJO_RANKING(0xD3),
    EQUIPPED_SKILL(0xD7),
    UPDATE_INNER_SKILL(0xDB),
    UPDATE_INNER_STATS(0xDD),
    CONFIRM_CROSS_HUNTER(0xE2),
    BLACKY_CUBE_EFFECT(0xFC),
    BLACKY_CUBE_RESULTS(0xFE),
    LOGIN_AUTHKEY(0x102),
    GUILD_SEARCH_RESULTS(0x107),
    SYSTEM_PROCESS_LIST(0x10D),
    AVATAR_MEGA_RESULT(0x112),
    AVATAR_MEGA(0x113),
    AVATAR_MEGA_REMOVE(0x114),
    MAPLE_EVENT(0x115),
    LOVE_OPERATION(0x118),
    CANCEL_TITLE_EFFECT(0x119),
    PARTY_RANKING(0x137),
    BOSS_MESSAGE(0x13B),
    ENCHANTING_OPERATION(0x13E),
    UPDATE_CORE_AURA(0x14D),
    GAME_EXIT(0x150),
    POTION_POT_MSG(0x16E),
    POTION_POT_UPDATE(0x170),
    OPEN_WEB(0x17C),
    SEND_CLIPBOARD(0x17D),
    CHAR_CASH(0x17E),
    UNK00A6(0x7FFE),
    SHOW_PREDICT_CARD(0x183),
    BBS_OPERATION(0x184),
    FISHING_STORE(0x18B),
    SHOW_PLAYER_CASH(0x196),
    PLAYER_CASH_UPDATE(0x197),
    LOGIN_WELCOME(0x1A5),
    SKILL_MACRO(0x1A6),
    WARP_TO_MAP(0x1A7),
    MTS_OPEN(0x1A8),
    CS_CHAR(0x1A9),
    CS_OPEN(0x1AA),
    RESET_SCREEN(0x1AB),
    MAP_BLOCKED(0x1AC),
    SERVER_BLOCKED(0x1AD),
    PARTY_BLOCKED(0x1AE),
    SHOW_EQUIP_EFFECT(0x1AF),
    MULTICHAT(0x1B0),
    WHISPER(0x1B1),
    BOSS_ENV(0x1B3),
    MAP_EFFECT(0x1B4),
    CASH_SONG(0x1B5),
    GM_EFFECT(0x7FFE),
    OX_QUIZ(0x7FFE),
    GMEVENT_INSTRUCTIONS(0x7FFE),
    CLOCK(0x1B9),
    BOAT_EFF(0x1BA),
    BOAT_EFFECT(0x1BB),
    LOGIN_SUCC(0x1BC),
    STOP_CLOCK(0x1C0),
    PYRAMID_UPDATE(0x1C4),
    PYRAMID_RESULT(0x1C3),
    QUICK_SLOT(0x1C4),
    MOVE_PLATFORM(0x7FFE),
    PVP_INFO(0x7FFE),
    DIRECTION_STATUS(0x7FFE),
    GAIN_FORCE(0x1D1),
    ACHIEVEMENT_RATIO(0x1D2),
    QUICK_MOVE(0x1D3),
    SPAWN_PLAYER(0x1F7),
    REMOVE_PLAYER_FROM_MAP(0x1F8),
    CHATTEXT(0x1F9),
    CHALKBOARD(0x1FA),
    UPDATE_CHAR_BOX(0x1FB),
    SHOW_CONSUME_EFFECT(0x1FC),
    SHOW_SCROLL_EFFECT(0x1FD),
    SHOW_SOULSCROLL_EFFECT(0x1FF),
    SHOW_ENCHANTER_EFFECT(0x200),
    SHOW_MAGNIFYING_EFFECT(0x201),
    SHOW_POTENTIAL_RESET(0x202),
    SHOW_POTENTIAL_FINALPANEL(0x204),
    SHOW_ADDITIONAL_RESET(0x205),
    SHOW_ADDITIONAL_EFFECT(0x206),
    SHOW_FIREWORKS_EFFECT(0x7FFE),
    SHOW_POTENTIAL_RESET_PANEL(0x209),
    TESLA_TRIANGLE(0x20E),
    FOLLOW_EFFECT(0x210),
    CRAFT_EFFECT(0x211),
    CRAFT_COMPLETE(0x212),
    HARVESTED(0x214),
    SHOW_DAMAGE_SKIN(0x7FFE),
    SOUL_MODE(0x21D),
    CANCEL_CHAIR(0x21E),
    GIVE_KSPSYCHIC(0x22B),
    ATTACK_KSPSYCHIC(0x22C),
    CANCEL_KSPSYCHIC(0x22D),
    GIVE_KSULTIMATE(0x22F),
    CANCEL_KSULTIMATE(0x230),
    SHOW_NEBULITE_EFFECT(0x233),
    EFFECT_SWITCH(0x23D),
    SPAWN_PET(0x23E),
    MOVE_PET(0x23F),
    PET_CHAT(0x240),
    PET_NAMECHANGE(0x241),
    PET_EXCEPTION_LIST(0x243),
    SHOW_PET(0x247),
    PET_COMMAND(0x248),
    DRAGON_SPAWN(0x249),
    DRAGON_MOVE(0x24A),
    DRAGON_REMOVE(0x24B),
    ANDROID_SPAWN(0x24C),
    ANDROID_MOVE(0x24D),
    ANDROID_EMOTION(0x24E),
    ANDROID_UPDATE(0x24F),
    ANDROID_DEACTIVATED(0x250),
    SPAWN_LARGEWHITE(0x251),
    CHANGE_LITTLEWHITE(0x253),
    REMOVE_LARGEWHITE(0x256),
    MOVE_LITTLEWHITE(0x258),
    REMOVE_LITTLEWHITE(0x259),
    SPAWN_LITTLEWHITE(0x25D),
    MOVE_PLAYER(0x260),
    CLOSE_RANGE_ATTACK(0x261),
    RANGED_ATTACK(0x262),
    MAGIC_ATTACK(0x263),
    ENERGY_ATTACK(0x264),
    SKILL_EFFECT(0x265),
    CANCEL_SKILL_EFFECT(0x267),
    DAMAGE_PLAYER(0x268),
    FACIAL_EXPRESSION(0x269),
    SHOW_ITEM_EFFECT(0x26B),
    SHOW_TITLE_EFFECT(0x26C),
    SHOW_UNK_EFFECT(0x26E),
    SHOW_CHAIR(0x272),
    UPDATE_CHAR_LOOK(0x273),
    SHOW_FOREIGN_EFFECT(0x274),
    GIVE_FOREIGN_BUFF(0x275),
    CANCEL_FOREIGN_BUFF(0x276),
    UPDATE_PARTYMEMBER_HP(0x277),
    LOAD_GUILD_NAME(0x278),
    LOAD_GUILD_ICON(0x279),
    LOAD_TEAM(0x27A),
    SHOW_HARVEST(0x27B),
    PVP_HP(0x27C),
    SHOW_DRAGON_FLY(0x27E),
    UPDATE_ZERO_LOOK(0x286),
    REMOVE_ZERO_FROM_MAP(0x288),
    SHOW_SKILL_SKIN(0x28F),
    SHOW_SPECIAL_ATTACK(0x290),
    SHOW_SPECIAL_EFFECT(0x293),
    CURRENT_MAP_WARP(0x294),
    MESOBAG_SUCCESS(0x296),
    MESOBAG_FAILURE(0x297),
    UPDATE_QUEST_INFO(0x298),
    BUFF_BAR(0x299),
    PET_FLAG_CHANGE(0x29A),
    PLAYER_HINT(0x29B),
    OPEN_WINDOW(0x2A1),
    REPAIR_WINDOW(0x2A3),
    INTRO_LOCK(0x2A5),
    INTRO_LOCK_MOVIE(0x2A6),
    CYGNUS_INTRO_DISABLE_UI(0x2A7),
    SUMMON_HINT(0x2A8),
    SUMMON_HINT_MSG(0x2A9),
    ARAN_COMBO(0x2AD),
    GAME_POLL_REPLY(0x7FFE),
    CRAFT_MESSAGE(0x2B1),
    SPOUSE_MESSAGE(0x2B2),
    ARAN_COMBO_RECHARGE(0x2B4),
    FOLLOW_MOVE(0x2B7),
    FOLLOW_MSG(0x2B8),
    GAME_POLL_QUESTION(0x7FFE),
    CREATE_ULTIMATE(0x2BA),
    HARVEST_MESSAGE(0x2BB),
    RUNE_ACTION(0x2BC),
    OPEN_BAG(0x2BD),
    DRAGON_BLINK(0x2BF),
    DIRECTION_INFO(0x2C0),
    REISSUE_MEDAL(0x2C1),
    CRIT_STATUS(0x2C2),
    PLAY_MOVIE(0x2C4),
    SHOW_CARTE(0x2C6),
    LUMINOUS_COMBO(0x2C9),
    SWITCH_LUCKYMONEY(0x2D3),
    CHAR_REQUEST(0x2D4),
    CANNON_PLATE(0x2D6),
    PLAYER_DEAD(0x2D8),
    AUTO_SITDOWN(0x2DD),
    EXTRA_ATTACK(0x2DE),
    RUNE_EFFECT(0x2FC),
    NPC_NOTICE(0x30C),
    PANTHER_ATTACK(0x30E),
    KSULTIMATE_ATTACK(0x31E),
    VIEW_WORLDMAP(0x34A),
    JIANQI_POINTS(0x351),
    COOLDOWN(0x358),
    SPAWN_SUMMON(0x35A),
    REMOVE_SUMMON(0x35B),
    MOVE_SUMMON(0x35C),
    SUMMON_ATTACK(0x35D),
    SUMMON_SKILL(0x362),
    DAMAGE_SUMMON(0x363),
    SUMMON_SKILL_LINK(0x366),
    SPAWN_MONSTER(0x369),
    KILL_MONSTER(0x36A),
    SPAWN_MONSTER_CONTROL(0x36B),
    MOVE_MONSTER(0x36F),
    MOVE_MONSTER_RESPONSE(0x370),
    DAMAGE_MONSTER(0x371),
    APPLY_MONSTER_STATUS(0x372),
    CANCEL_MONSTER_STATUS(0x373),
    MONSTER_SKILL(0x378),
    SHOW_MONSTER_HP(0x37A),
    SHOW_RESULTS(0x37B),
    CATCH_MONSTER(0x37C),
    SPAWN_NPC(0x3AD),
    REMOVE_NPC(0x3AE),
    SPAWN_NPC_REQUEST_CONTROLLER(0x3B0),
    NPC_ACTION(0x3B1),
    NPC_SCRIPTABLE(0x7FFE),
    UNK01A2(0x7FFE),
    SPAWN_HIRED_MERCHANT(0x3C5),
    DESTROY_HIRED_MERCHANT(0x3C6),
    UPDATE_HIRED_MERCHANT(0x3C7),
    CHANGE_HIRED_MERCHANT_NAME(0x3C8),
    DROP_ITEM_FROM_MAPOBJECT(0x3C9),
    REMOVE_ITEM_FROM_MAP(0x3CB),
    SPAWN_LOVE(0x3CD),
    REMOVE_LOVE(0x3CE),
    SPAWN_MIST(0x3CF),
    REMOVE_MIST(0x3D1),
    SPAWN_DOOR(0x3D3),
    REMOVE_DOOR(0x3D4),
    MECH_DOOR_SPAWN(0x3D5),
    MECH_DOOR_REMOVE(0x3D6),
    REACTOR_HIT(0x3DA),
    REACTOR_SPAWN(0x3DC),
    REACTOR_DESTROY(0x3DF),
    SPAWN_EXTRACTOR(0x3E0),
    REMOVE_EXTRACTOR(0x3E2),
    SPAWN_RUNE(0x455),
    REMOVE_RUNE(0x456),
    RESPAWN_RUNE(0x457),
    NPC_TALK(0x4D5),
    OPEN_NPC_SHOP(0x4D6),
    CONFIRM_SHOP_TRANSACTION(0x4D7),
    OPEN_STORAGE(0x4EE),
    MERCH_ITEM_MSG(0x4EF),
    MERCH_ITEM_STORE(0x4F0),
    RPS_GAME(0x4F2),
    MESSENGER(0x4F3),
    PLAYER_INTERACTION(0x4F5),
    SHOW_CHANGE_POTENTIAL_MESO(0x4FF),
    SHOW_CHANGE_POTENTIAL_RESULT(0x500),
    SHOW_ZERO_WEAPON_INFO(0x503),
    DUEY(0x512),
    CS_UPDATE(0x514),
    CS_OPERATION(0x515),
    CS_UPDATE_MESO(0x516),
    CS_COLLOCATION(0x517),
    CS_POTIONS(0x51F),
    CS_POTION_POT_UPDATE(0x52A),
    SIGIN_INFO(0x53E),
    MIEMIE_RANKING(0x540),
    SHOW_POTENTIAL_RESULT(0x541),
    KEYMAP(0x55E),
    PET_AUTO_HP(0x55F),
    PET_AUTO_BUFF(0x560),
    PET_AUTO_MP(0x561),
    PET_AUTO_UN(0x562),
    SHOW_SCROLL_TIP(0x7FFE),
    START_TV(0x7FFE),
    REMOVE_TV(0x7FFE),
    ENABLE_TV(0x7FFE),
    GET_MTS_TOKENS(0x7FFE),
    MTS_OPERATION(0x7FFE),
    SPAWN_ARROWS_TURRET(0x579),
    CANCEL_ARROWS_TURRET(0x57B),
    ARROWS_TURRET_ACTION(0x57E),
    VICIOUS_HAMMER(0x5A4),
    PLATINUM_HAMMER(0x5A7),
    DAY_OF_CHRONOSPHERE(0x5A8),
    ERROR_CHRONOSPHERE(0x5A9),
    LOGIN_MESSAGE(0x5B3),
    MEMORY_CUBE_EFFECT(0x7FFE),
    MEMORY_CUBE_RESULT(0x7FFE),
    SKILL_ACTIVE(0x7FFE),
    SKILL_NOT_ACTIVE(0x7FFE),
    CATCH_MOB(0x7FFE),
    FISHING_BOARD_UPDATE(0x7FFE),
    XMAS_SURPRISE(0x7FFE),
    ALIEN_SOCKET_CREATOR(0x7FFE),
    EARN_TITLE_MSG(0x7FFE),
    VISITOR(0x7FFE),
    ITEM_EFFECT_MOB(0x7FFE),
    MONSTER_PROPERTIES(0x7FFE),
    TALK_MONSTER(0x7FFE),
    REMOVE_TALK_MONSTER(0x7FFE),
    PVP_SUMMON(0x7FFE),
    UNK0092(0x7FFE),
    REGISTER_FAMILIAR(0x7FFE),
    SPAWN_FAMILIAR(0x7FFE),
    MOVE_FAMILIAR(0x7FFE),
    ATTACK_FAMILIAR(0x7FFE),
    UPDATE_FAMILIAR(0x7FFE),
    TOUCH_FAMILIAR(0x7FFE),
    SIDEKICK_OPERATION(0x7FFE),
    CS_GM_GIFI(0x7FFE),
    CS_MSG(0x7FFE),
    GM_POLICE(0x7FFE),
    ROLL_SNOWBALL(0x7FFE),
    HIT_SNOWBALL(0x7FFE),
    SNOWBALL_MESSAGE(0x7FFE),
    LEFT_KNOCK_BACK(0x7FFE),
    HIT_COCONUT(0x7FFE),
    COCONUT_SCORE(0x7FFE),
    MONSTER_CARNIVAL_START(0x7FFE),
    MONSTER_CARNIVAL_OBTAINED_CP(0x7FFE),
    MONSTER_CARNIVAL_PARTY_CP(0x7FFE),
    MONSTER_CARNIVAL_SUMMON(0x7FFE),
    MONSTER_CARNIVAL_DIED(0x7FFE),
    CHAOS_HORNTAIL_SHRINE(0x7FFE),
    CHAOS_ZAKUM_SHRINE(0x7FFE),
    HORNTAIL_SHRINE(0x7FFE),
    ENGLISH_QUIZ(0x7FFE),
    PVP_TYPE(0x7FFE),
    PVP_TRANSFORM(0x7FFE),
    PVP_ENABLED(0x7FFE),
    PVP_SCORE(0x7FFE),
    PVP_RESULT(0x7FFE),
    PVP_TEAM(0x7FFE),
    PVP_SCOREBOARD(0x7FFE),
    PVP_POINTS(0x7FFE),
    PVP_KILLED(0x7FFE),
    PVP_MODE(0x7FFE),
    PVP_ICEKNIGHT(0x7FFE),
    CAPTURE_FLAGS(0x7FFE),
    CAPTURE_POSITION(0x7FFE),
    CAPTURE_RESET(0x7FFE),
    TV_MESSAGE(0x7FFE),
    HIDDEN_TAIL_ADN_EAR(0x7FFE),
    SHOW_MAP_NAME(0x7FFE),
    PVP_ICEGAGE(0x7FFE),
    PLAYER_NPC(0x7FFE),
    BLOCK_PORTAL(0x7FFE),
    ARIANT_SCOREBOARD(0x7FFE),
    ARIANT_THING(0x7FFE),
    ARIANT_PQ_START(0x7FFE),
    NPC_CONFIRM(0x7FFE),
    SHOW_FUSION_EFFECT(0x7FFE),
    PLAYER_DAMAGED(0x7FFE),
    PVP_ATTACK(0x7FFE),
    PVP_MIST(0x7FFE),
    PVP_COOL(0x7FFE),
    FISHING_CAUGHT(0x7FFE),
    PAMS_SONG(0x7FFE),
    PIN_ASSIGNED(0x7FFE),
    ALL_CHARLIST(0x7FFE),
    GET_CARD(0x7FFE),
    CARD_SET(0x7FFE),
    BOOK_STATS(0x7FFE),
    BOOK_INFO(0x7FFE),
    // 缺少的包头
    MOVE_ENV(-2),
    UPDATE_ENV(-2),
    SHOW_SKILLSKIN(-2),
    FAMILIAR_INFO(-2),
    ECHO_MESSAGE(-2),
    BOOSTER_FAMILIAR(-2),
    BOOSTER_PACK(-2),
    MOB_TO_MOB_DAMAGE(-2),
    CYGNUS_ATTACK(-2),
    MONSTER_RESIST(-2),
    MONSTER_CARNIVAL_RESULT(-2),
    MONSTER_CARNIVAL_RANKING(-2),
    CYGNUS_INTRO_ENABLE_UI(-2),
    UNKNOWN(-2);
    private int code = -2;

    SendPacketOpcode(int code) {
        this.code = code;
    }

    @Override
    public void setValue(short code) {
        this.code = code;
    }

    @Override
    public short getValue() {
        return (short) code;
    }

    public static SendPacketOpcode getByType(int type) {
        for (SendPacketOpcode l : SendPacketOpcode.values()) {
            if (l.getValue() == type) {
                return l;
            }
        }
        return UNKNOWN;
    }

    public static Properties getDefaultProperties() throws IOException {
        Properties props = new Properties();
        FileInputStream fileInputStream = new FileInputStream("properties/sendops.properties");
        BufferedReader buff = new BufferedReader(new InputStreamReader(fileInputStream, "GBK"));
        props.load(buff);
        fileInputStream.close();
        buff.close();
        return props;
    }

    static {
        reloadValues();
    }

    public static void reloadValues() {
        try {
            if (ServerConstants.loadop) {
                Properties props = new Properties();
                props.load(SendPacketOpcode.class.getClassLoader().getResourceAsStream("sendops.properties"));
                ExternalCodeTableGetter.populateValues(props, values());
            } else {
                File file = new File("properties/sendops.properties");
                if (file.exists()) {
                    ExternalCodeTableGetter.populateValues(getDefaultProperties(), values());
                }
            }
        } catch (IOException e) {
            throw new RuntimeException("加载 sendops.properties 文件出现错误", e);
        }
    }
}
